{
  "lessons": [
    {
      "title": "CSS Velgere",
      "content": [
        {
          "section": [
            {
              "paragraph": "CSS velgere er den viktigste delen av css, grunnen til dette er at dette er hvordan css vet hvilken elementer som skal endres på. Disse er derfor det du kommer til å bruke mest av i css."
            }
          ]
        },
        {
          "section": [
            {
              "paragraph": "De viktigste velgerne som brukes mest er Id, Klasse og Element taggene. Id brukes for å <span>referere til et spesifikt element</span>. Vi lager de med å bruke hashtag «#»."
            },
            {
              "code": "#para1 {text-align: center; color: red;}"
            }
          ]
        },
        {
          "section": [
            {
              "paragraph": "Klasse bruker vi til å <span>referere til flere enn et element.</span> Vi lager de med å bruke punktum «.». Id velgeren blir satt over klasse velgeren så endringene i elementene tar alltid fra id først."
            },
            {
              "code": ".center {text-align: center; color: red;}"
            }
          ]
        },
        {
          "section": [
            {
              "paragraph": "Vi kan også <span>endre på selve html-elementet.</span>"
            },
            {
              "code": "h1 {text-align: center; color: red;}"
            }
          ]
        },
        {
          "section": [
            {
              "paragraph": "Hvis vi vill endre <span>flere html-elementer på en gang</span>, kan vi gruppere dem. Dette lager mindre rot i koden."
            },
            {
              "code": "h1,| h2,| p {text-align: center; color: red;}"
            }
          ]
        },
        {
          "section": [
            {
              "paragraph": "Hvis du vill <span>endre på alle html-elementene</span> på en gang uten å skrive ned alle, kan vi bruke den Universelle velgeren."
            },
            {
              "code": "* {text-align: center; color: red;}"
            }
          ]
        }
      ],
      "tasks": [
        {
          "task": "N/A"
        },
        {
          "task": "N/A"
        }
      ]
    },
    {
      "title": "Skrifttyper",
      "content": [
        {
          "section": [
            {
              "paragraph": "Introduksjon: Denne leksjonen gir en oversikt over hvordan du kan bruke forskjellige <span>skrifttyper (fonts)</span> i CSS. Det finnes mange måter å bruke skrifttyper på. Vi har innebygde og skrifttyper man kan importere."
            }
          ]
        },
        {
          "section": [
            {
              "paragraph": "Vi har mange innebygde skrifttyper. Fire eksempler på dette er: <span>Times, Helvetica, Arial og Courier</span>. For å bruke disse må vi bruke denne linjen med kode i stilarket:"
            },
            {
              "code": "h1 { font-family: Arial;}"
            }
          ]
        },
        {
          "section": [
            {
              "paragraph": "For å <span>importere skrifttyper</span> må du først finne en nettside og en skrifttype du liker. I dette tilfellet kommer forklaringen til å være om nettsiden <span>Google Fonts</span>. Velg fonten ved å trykke på 'Get font' og deretter 'Get Embed Code'. På siden kan du velge å bruke enten en lenke eller import. I dette eksemplet bruker vi import, men det er samme metode for å legge den inn. I stilarket skal lenken bli kopiert inn rett over alt innholdet."
            },
            {
              "image": "fonts.png",
              "caption": "'Chillax' fra Fontshare",
              "landscape": true
            }
          ]
        }
      ],
      "tasks": [
        {
          "task": "Importer en Sans-serif fra font-siden Fontshare.com og sett den til alle h-tagger."
        }
      ]
    },
    {
      "title": "Flexbox",
      "content": [
        {
          "section": [
            {
              "paragraph": "Flexbox er et kraftig verktøy for å lage <span>responsive oppsett</span> i webdesign."
            }
          ]
        },
        {
          "section": [
            {
              "paragraph": "Egenskapen flex-direction <span>definerer i hvilken retning</span> beholderen ønsker å stable flex-elementene."
            },
            {
              "image": "flex2.png",
              "caption": "Elementene er stablet nedover, som display: block;"
            },
            {
              "code": ".flex-container {display: flex;flex-direction: column;}"
            }
          ]
        },
        {
          "section": [
            {
              "paragraph": "For å <span>sentrere både horisontalt og vertikalt</span> samtidig, kan vi bruke align-items: center; og justify-content: center;, som plasserer elementene både vertikalt og horisontalt i midten av beholderen."
            },
            {
              "image": "flex3.png",
              "caption": "Elementene er sentrert midt i containeren."
            },
            {
              "code": ".flex-container {display: flex;align-items: center;justify-content: center;}"
            }
          ]
        },
        {
          "section": [
            {
              "paragraph": "Egenskapen flex-grow spesifiserer hvor mye et flex-element vil <span>vokse i forhold til resten</span> av flex-elementene."
            },
            {
              "image": "flex4.png",
              "caption": "Elementene får en størrelse basert på flex-grow."
            },
            {
              "code": ".flex-container {display: flex;flex-grow: 1;}"
            }
          ]
        }
      ],
      "tasks": [
        {
          "task": "N/A"
        },
        {
          "task": "N/A"
        }
      ]
    },
    {
      "title": "Animasjoner",
      "content": [
        {
          "section": [
            {
              "paragraph": "Animasjoner med keyframes i CSS er en kraftig metode for å <span>skape bevegelse eller endringer i et element over tid</span>. Ved å definere et navn for animasjonen og angivelse av varighet, kan vi programmere ulike steg eller endringer som skal skje i elementet gjennom animasjonen. Dette gir oss fullstendig kontroll over hvordan elementet beveger seg eller endres visuelt på nettsiden vår."
            },
            {
              "image": "animasjon.gif",
              "caption": "Kan du se de forskjellige delene som er animert her?"
            }
          ]
        },
        {
          "section": [
            {
              "paragraph": "Deretter kan vi skrive koden til animasjonen, vi skriver @keyframes [NAME] { } får å gjøre det til en animasjons kode og referere til alle elementene som har navnet i seg. Innenfor parentesene skriver vi hvor langt gjennom animasjonen den skal ha kommet før den endrer på css elementet med prosent. Etter den har gjennomført hele kodesnuten går den tilbake til det den var før animasjonen.",
              "bound": true
            },
            {
              "code": "div { width: 100px; height: 100px; background-color: red; animation-name: example; animation-duration: 4s; };@keyframes example { 0% {background-color: red;} 25% {background-color: yellow;} 50% {background-color: blue;} 100% {background-color: green;}"
            }
          ]
        }
      ],
      "tasks": [
        {
          "task": "N/A"
        },
        {
          "task": "N/A"
        }
      ]
    },
    {
      "title": "Sentrering",
      "content": [
        {
          "section": [
            {
              "paragraph": "Denne leksjonen gir en oversikt over hvordan du bruker <span>sentrering i CSS for å sentrere elementer</span>. Vi starter med å vise hvordan man sentrerer et objekt horisontalt med bruk av `margin` og `auto`. Dette er mest nyttig for å sentrere blokkelementer som div. Følgende kode er et eksempel på dette:"
            },
            {
              "code": "margin: 0 auto;width: 50%;<span>Setter venstre og høyre margin til auto </span>|"
            }
          ]
        },
        {
          "section": [
            {
              "paragraph": "<span>Sentrere vertikalt og horisontalt</span> derimot krever litt mer. Vi trenger å bruke `position: absolute` og `transform: translate(-50%, -50%)`. Dette er nyttig for å sentrere absoluttposisjonerte elementer, for eksempel modale vinduer eller pop-ups. Vi bruker følgende kode:"
            },
            {
              "code": "position: absolute; <span>Absoluttposisjonering</span>| top: 50%; <span>Plasser toppen på 50% av foreldreelementet</span>| left: 50%; <span>Plasser venstre side på 50% av foreldreelementet</span>| transform: translate(-50%, -50%); <span>Flytt elementet tilbake med halvparten av sin egen bredde og høyde</span>"
            }
          ]
        }
      ],
      "tasks": [
        {
          "task": "Gjør slik at en tekst innenfor et element blir sentrert inni et annet element."
        },
        {
          "task": "Sentrer et objekt horizontalt."
        }
      ]
    },
    {
      "title": "Seletorer",
      "content": [
        {
          "section": [
            {
              "paragraph": "Denne leksjonen er mest relevant for <span>knapper og linker</span>, de fire 'reaksjonene' du kommer til å lære er: link, :visited, :hover og :active. Vi kommer hovedsakelig til å vise med farger og lenker, men det er mulig å bruke mange andre funksjoner også. Se: linken under for mer informasjon om dette."
            }
          ]
        },
        {
          "section": [
            {
              "link": "https://www.w3schools.com/cssref/sel_hover.php",
              "tag": "CSS :hover Selector (w3schools.com)"
            }
          ]
        },
        {
          "section": [
            {
              "paragraph": "For å endre på en <span>lenkes standardfarge</span> kan vi bruke følgende kode:"
            },
            {
              "code": "a:link {color: green; <span> Endrer fargen på lenken.</span>|}"
            }
          ]
        },
        {
          "section": [
            {
              "paragraph": "For å få en lenke til å <span>reagere når musepekeren er over</span>, bruker vi følgende kode:"
            },
            {
              "code": "a:visited {color: green; <span> Endrer fargen på lenkene som har blitt besøkt. </span>|}"
            }
          ]
        },
        {
          "section": [
            {
              "paragraph": "For en lenke der <span>du trykker og den reagerer</span>, bruker du følgende kode:"
            },
            {
              "code": "a:hover {color: red; <span> Endrer fargen når musepekeren er over lenken. </span>|}"
            }
          ]
        }
      ],
      "tasks": [
        {
          "task": "Få et element til å skalere to ganger sin størrelse når musen er over. Tenk over hvorfor dette kan være et problem."
        },
        {
          "task": "Endre fargen på en link til rosa."
        }
      ]
    },
    {
      "title": "CSS farger",
      "content": [
        {
          "section": [
            {
              "paragraph": "I html kan en farge ble spesifisert med å bruke farge navn. Noen eksempler på disse fargene er følgende:"
            },
            {
              "image": "fargenavn.png"
            }
          ]
        },
        {
          "section": [
            {
              "paragraph": "<span>Bakgrunnsfarge</span> <br>Hvis vi vil farge bakgrunner på elementene våre bruker vi i stilarket følgende kode:Body {Background-color:Tomato;}Denne funksjonen kan bli brukt på alle elementer inkludert body og andre tagger."
            }
          ]
        },
        {
          "section": [
            {
              "paragraph": "<span>Tekst farge</span><br>Hvis du bare vil farge teksten og ikke bakgrunnen kan vi bruke denne koden i stilarket. Denne funksjonen kan bli brukt i body, H1 og andre tagger og elementer som har tekst i seg. "
            },
            {
              "code": "body { color: DodgerBlue}",
              "textCompile": true,
              "landscape": true
            }
          ]
        },
        {
          "section": [
            {
              "paragraph": "<span>Ramme farge (Border Color)</span><br>Man kan også sette ramme farge, for å sette en farge på en ramme må vi i samme funksjon som vi lagde rammen skrive fargen. Eks:H1 {Border: 2px solid Tomato;}Vi ser at vi definerer border og skriver hvor tjukk denne rammen skal være i tillegg til stilen som i dette tilfelle er Solid. Fargen kommer til slutt og dette endrer rammen til fargen tomato."
            }
          ]
        },
        {
          "section": [
            {
              "paragraph": "<span>Farge verdier</span><br>I HTML kan vi spesifisere farger med bruk av RGB, RGBA, HEX, HSL, og HSLA verdier. RGB:rgb(255, 99, 71)RGBA (her viser vi også hvor mye gjennomsiktighet den er 0.5 = 50%):rgba (255, 99, 71, 0.5)HEX:#ff6347HSL:hsl (9, 100%, 64%)HSLA (her viser vi også hvor mye gjennomsiktighet den er 0.5 = 50%):hsla(9,100%, 64%, 0.5)eksempel på hvordan man bruker det i stilarket:"
            },
            {
              "code": "h1 { background-color:#ff6347; }",
              "textCompile": true,
              "landscape": true
            }
          ]
        },
        {
          "section": [
            {
              "paragraph": "<span>RGB farge verdier</span><br>Vi kan spesifisere en RGB-verdi med å bruke en standard formularRgb(rød, grønn, blå)Hver prarameter (rød, grønn, blå) definerer intensiteten av fargen med en verdi mellom 0 og 255. Dette betyr at det er sirka 16777216 farger du kan lage.  Eksempler av dette er:Derimot før å få grå farger er verdiene like for eksempel (240,240,240) eller (60,60,60) der de med parameteren 60 er de mørkeste og 240 er den lyseste. "
            },
            {
              "image": "rgb.png"
            }
          ]
        },
        {
          "section": [
            {
              "paragraph": "<span>RGBA farge verdier</span><br>RGBA og RGB er nesten helt lik i forhold til den standard formularen, eneste forskjellen er at RGBA har en ny parameter som heter alpha. Rgba (red, green, blue, alpha)Alpha er en parameter som er et nummer mellom 0.0 til 1.0. Den viser hvor gjennomsiktig et element er, der 0.0 er helt gjennomsiktig mens 1.0 er ikke gjennomsiktig i det hele tatt. "
            },
            {
              "image": "rgba.png"
            }
          ]
        },
        {
          "section": [
            {
              "paragraph": "<span>HTML Hex farger</span><br>En hexadecimal farge (Den har bare 6 tegn) er spesifisert med #RRGGBB. RR er rød, GG er grønn og BB er blå. Den har verdier fra 00 til ff der den høyeste verdien er ff og laveste er 00. Hvis vi bruker #ff0000 blir den helt rød. Derimot hvis vi bruker #0000ff blir den helt blå. Svart er #000000 mens hvit er #ffffff."
            },
            {
              "image": "hex.png"
            }
          ]
        }
      ]
    },
    {
      "title": "Praktisk CSS",
      "content": [
        {
          "section": [
            {
              "paragraph": "Etter som du fortsetter å utvikle kode, kommer du flere ganger til å ta med deg kode fra tidligere prosjekter. Dette kan være kode som fikser vanlige silsettingsproblemer, endrer farger, eller er lik dine preferanser. Her er den <span>stilsettingen som vi har samlet opp</span>. I de følgene eksemplene har vi tatt eksempler fra denne nettsiden. Om du ønsker å se mer, er hele nettsiden publisert på Github."
            }
          ]
        },
        {
          "section": [
            {
              "paragraph": "Det første, og kanskje mest praktiske tipset er <span>fargevariabler</span>. Dette gjøres ved å lage variabler i CSS som lagrer tallene i fargekoden RGB. Det er også mulig å lagre HEX-verdier. Fordelen med RGB overfor HEX er at det er lettere å legge til gjennomsiktighet i elementet (RGBA). Dette kan hentes ut ved hjelp av funksjonen var(), og navnet på variablen."
            },
            {
              "code": ":root {-- primary: 21, 20, 31;-- secondary: 246, 245, 240;-- accent: 30, 30, 54;.element {background-color: rgb(var( -- accent));}.gjennomsiktigElement {background-color: rgba(var( -- accent)), .5;}"
            }
          ]
        },
        {
          "section": [
            {
              "link": "https://www.w3schools.com/css/css3_variables.asp",
              "tag": "W3 Schools - CSS Variables"
            }
          ]
        },
        {
          "section": [
            {
              "paragraph": "Noen objekter i HTML kommer med standard margin og padding. For å <span>fikse mange feil og problemer</span> som kan følge med dette, legger vi til 'border-box' for å inkludere padding og border i størrelsen til elementene."
            },
            {
              "code": "*,|*:: before,|*:: after {padding: 0;margin: 0;box-sizing: border-box;"
            }
          ]
        },
        {
          "section": [
            {
              "link": "https://www.w3schools.com/css/css3_box-sizing.asp",
              "tag": "W3 Schools - Box Sizing"
            }
          ]
        },
        {
          "section": [
            {
              "paragraph": "Om man <span>markerer tekst</span> på en hvilken som helst side, vil teksten få en farge. Dette kan endres på i CSS. I dette eksempelet har makrert tekst på nettsiden, accentfargen fra en variablel. Prøv å marker denne teksten for å se det i aksjon."
            },
            {
              "code": ":: selection {background-color: rgba(var( -- accentMain), 0.5);"
            }
          ]
        },
        {
          "section": [
            {
              "link": "https://www.w3schools.com/cssref/sel_selection.php",
              "tag": "W3 Schools - Selection"
            }
          ]
        },
        {
          "section": [
            {
              "paragraph": "Et triks for å få nettsiden din til å se proffesjonell ut, er å <span>endre scrollbaren</span>. I dette tilfellet er scrollbaren gitt accentfargen og en rund kant. Når du har musen over, blir den litt mørkere."
            },
            {
              "code": "::- webkit-scrollbar {width: 5px;::- webkit-scrollbar-track {background: transparent;::- webkit-scrollbar-thumb {background-color: rgb(var( -- accentMain));border-radius: 10px;}::- webkit-scrollbar-thumb:hover {background-color: rgba(var( -- accentMain), 0.7);"
            }
          ]
        },
        {
          "section": [
            {
              "paragraph": "Et annet triks er å benytte 'span' taggen for å <span>utheve viktig tekst</span>. Dette gjøres ofte ved å ha en accentfarge på teksten, og/eller ha teksten uthevet. Dette passer godt på tittler og tekst, for at brukeren skal finne det viktige i teksten så fort som mulig."
            },
            {
              "code": "h1 span,| h2 span,| h3 span,| h3 span,| h4 span,| h5 span,| p span { color: rgb(var(--accentMain)); }"
            }
          ]
        },
        {
          "section": [
            {
              "link": "https://www.w3schools.com/tags/tag_span.asp",
              "tag": "W3 Schools - HTML <span> Tag"
            }
          ]
        },
        {
          "section": [
            {
              "paragraph": "Om man har <span>linker som går til forskjellige deler</span> av nettsiden, kan man styre bevegelsen går. Det vanlige er å sette det til 'smooth'."
            },
            {
              "code": "html {scroll-behavior: smooth;}"
            }
          ]
        },
        {
          "section": [
            {
              "link": "https://www.w3schools.com/css/css3_smooth.asp",
              "tag": "W3 Schools - Smooth Scrolling"
            }
          ]
        }
      ],
      "tasks": [
        {
          "task": "Legg til en markering på nettsiden din i denne fargen."
        },
        {
          "task": "Endre utseendet på scrollbaren din til å være en annen farge."
        }
      ]
    },
    {
      "title": "Hvordan lage moderne nettsider",
      "content": [
        {
          "section": [
            {
              "paragraph": "Å lage gode nettsider trenger ikke å være vanskelig. Kanskje du synes at du ikke er så flink til å designe noe, eller at nettsider er utenfor din komfortsone. Det er mange som føler det slik, men <span>det er faktisk enklere enn du tror</span>. Enhver moderne nettside har omtrent den samme stilen, og dette gjør den lettere å få responsiv. Det er noe vi kan benytte oss av. La oss nå benytte det vi har lært tidligere, og gjenskape en god nettside."
            }
          ]
        },
        {
          "section": [
            {
              "paragraph": "Vi starter med å åpne Google, og søker etter 'modern website design'. Forskjellige nettsider har forskjellige bruksområder, og det tar nok litt tid å finne den riktige. Vi tar et eksempel på denne. Det er en nettside som viser fram flotte reisemål, og ser sånn passe vanskelig ut, perfekt for vårt formål.<br><br>Det første vi gjør, er å <span>dissekere nettsiden inn i hver sin del</span>. Dette gjør det lettere å se hvilke elementer som ligger hvor. Vi ser klart at det er fem seksjoner; en navbar, et banner, to avsnitt og en kontaktseksjon."
            },
            {
              "image": "eksempelNettside.png"
            },
            {
              "image": "eksempelNettside2.png"
            }
          ]
        },
        {
          "section": [
            {
              "paragraph": "La oss starte med den første delen, navbaren. Den har ikke så mye annet enn en logo og noen lenker til andre sider. Hvis vi bruker '<span>display: flex</span>' på navbaren og setter '<span>margin-right: auto</span>' på logoen, begynner det å ta form. Med litt justering av margin og padding på elementene, samt en accentfarge på den siste lenken, begynner det å se bra ut."
            },
            {
              "code": "<nav>|<img src='' alt='Test' id='logo'>|<a href=''>Link 1</a>|<a href=''>Link 2</a>|<a href=''>Link 3</a>|<a href=''>Link 4</a>|<a href=''>Link 5</a>|<a href=''>Link 6</a>|</nav>",
              "textCompile": true,
              "landscape": true
            },
            {
              "image": "eksempelNettside3.png",
              "landscape": true
            }
          ]
        },
        {
          "section": [
            {
              "paragraph": "Den andre seksjonen gjør vi det samme med. Tekst og knappen er sentrert i midten av kontaineren, med teksten og knappen dyttet til høyre. Teksten har nok '<span>text-align: right</span>', mens kontaineren som holder tittel og knapp har '<span>flex-direction: column</span>' og '<span>align-items: flex-end</span>'. Samtidig kan vi også se at bakgrunnen er delt opp i tre, litt runde bokser. Den ene boksen er ca. 1/8-dels større enn de andre. Dette kan lett utføres ved å bruke '<span>flex-grow</span>', og fordele det deretter. Innholdet i boksene er litt lysere enn området rundt, og dette er nok gjort ved å benytte '<span>filter: brightness()</span>'."
            },
            {
              "image": "eksempelNettside4.png",
              "landscape": true
            }
          ]
        },
        {
          "section": [
            {
              "paragraph": "Når det gjelder den tredje seksjonen, ser vi at den er tilsynelatende avansert. Men om vi <span>ser på det som et rutenett</span>, ser vi at den er 4 deler høy, og 5 deler bred. Dette legger vi inn som regler i grid, ved at vi bestemmer selv hvor elementene skal være i forhold til hverandre. Ved å så legge til gap, har vi hele designet ferdig. Den samme prosessen kan gjentas for seksjonen under."
            },
            {
              "code": ".container { display: grid; grid-template-columns: 1fr 1fr 1fr 1fr 1fr; grid-template-rows: 1fr 1fr 1fr; gap: 8px; grid-auto-flow: row; grid-template-areas:| 'tekst tekst tekst bilde1 bilde2'| 'tekst tekst tekst bilde1 bilde2'| 'knapp knapp knapp knapp bilde2'; }",
              "textCompile": true,
              "landscape": true
            },
            {
              "image": "eksempelNettside5.png",
              "landscape": true
            }
          ]
        },
        {
          "section": [
            {
              "paragraph": "Bakgrunn, fargebruk og oversiktlig design. Hvis vi ser på nettsiden som en helhet, kan vi se at bakgrunnen ikke er en enkel farge, men heller et <span>stort uklart bilde</span> lagt over 'body'. I banneret er det gradvis en endring fra to bilder ved hjelp av '<span>mask-image: linear-gradient(black, transparent)</span>', som gjør et element gradvis gjennomsiktig.<br><br>Fargebruken er også viktig. På nettsiden er det valgt ut <span>tre hovedfarger</span>: sort for bakgrunn, hvit for tekst og orange for aksent. Dette skaper en helhetlig følelse og binder siden sammen. Bildene og fargene passer godt med aksentfargen, og det virker som de er redigert før de ble lagt inn på nettsiden.<br><br>Nettsiden er enkel og oversiktlig. Den har <span>ingen forstyrrende elementer</span> og er brukervennlig. Den ligner på andre nettsider på en god måte, noe som gjør det enkelt for brukerne å navigere. Designet er også responsivt, noe som er viktig med tanke på at over 60% av nettsidetrafikken kommer fra mobile enheter. Har du vurdert hvordan siden din ser ut for mobilbrukere?"
            },
            {
              "image": "eksempelNettside.png",
              "caption": "Kan du se hva som reklameres for her?"
            },
            {
              "image": "badWebsite.jpg",
              "caption": "Hva med nå?"
            }
          ]
        }
      ]
    }
  ]
}